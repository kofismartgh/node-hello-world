pipeline {

    agent any
    tools {nodejs "NodeJS"}

    options {
        timestamps()
        timeout(time:20, unit:'MINUTES')

        // office365ConnectorWebhooks([[
        //     name: 'eTranzact MSTeams',
        //     startNotification: true,
        //     notifySuccess: true,
        //     notifyAborted: true,
        //     notifyFailure: true,
        //     url: "${Build_Alerts_WebHook_URL}"
        //     //url: 'https://etranzactgh.webhook.office.com/webhookb2/5e7a4893-4699-46aa-ae0d-53b00a717c71@3d685e69-4250-4b93-8a79-790efcd4e72a/JenkinsCI/b4123683cdc74d16b1aede5a5cc1812e/770e1f69-9158-403e-91aa-6469968cc96e'
        // ]])
    }

    environment {
        TAG = "${env.BUILD_NUMBER}"
        IMAGE = "gh-hello-node"
    }


    stages{

        // Checkout Code From GitHub
        // stage("CheckOut"){
        //     steps{
        //         script{
        //             checkout scm
        //         }
        //     }
        // }

        //     // Run Static Code Analysis
        stage('Code Scan Checks') {
            steps {
                script {
                    sh 'echo success'
                    // def scannerHome = tool 'sonarscaner'; // sonar-scanner is the name of the tool in the manage jenkins> tool configuration
                    // withSonarQubeEnv('eTranzact GH Sonarqube Server') { //installationName is the name of sonar installation in manage jenkins>configure system
                    //     sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=${IMAGE} -Dsonar.projectName=${IMAGE} -Dsonar.host.url=${env.SONAR_HOST_URL}"
                }
            }
        }

    

    // stage("Quality gate") {
    //         steps {
    //             script {
    //             def qualitygate = waitForQualityGate()
    //             sleep(10)
    //             if (qualitygate.status != "OK") {
    //                 waitForQualityGate abortPipeline: true
    //             }
    //             }
    //         }
    // }




    // // Build Code Into Deployable Artifact
    stage("Build Artifact & Run Unit Test Cases") {
        steps {
            script{
                sh"""
                npm install
                """
                dockerImage = docker.build("soloetzgh/agronode:latest")
                withDockerRegistry([ credentialsId: "soloetz_docker", url: "" ]) {
                    dockerImage.push("latest")
                sh 'docker images ls'

                
            }
        }
    }


    //Package Deployable Artifact & Publish To ECR Storage Repository
    // stage ('Package & Publish') {
    //     when {
    //         anyOf {
    //             branch 'develop'
    //             expression {
    //                 return env.BRANCH_NAME.startsWith('release/')
    //             }
    //         }
    //     }
    //     steps {

    //         script{
    //             def packageJSON = readJSON file: 'package.json'
    //             def packageJSONVersion = packageJSON.version //to get the app version number
    //             // APP_TAG = "${packageJSONVersion}-${env.BUILD_NUMBER}"
    //             // app = docker.build("$IMAGE:$APP_TAG")
    //             sh 'aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin ${AWS_Account_URL}'
    //             // docker.withRegistry("${ECR_Repository_URL}/gh-hello-node") {
    //             // // docker.withRegistry("https://842092678711.dkr.ecr.eu-west-1.amazonaws.com/gh-terra-name-match-service"){
    //             // app.push("$APP_TAG")

    //             if (env.BRANCH_NAME == 'develop') {

    //                 APP_TAG = "Dev-${packageJSONVersion}-${env.BUILD_NUMBER}"

    //                 echo "Building Docker Image From Develop ${APP_TAG}"
    //                 app = docker.build("$IMAGE:$APP_TAG")
    //             }

    //             else {

    //                 APP_TAG = "Release-${packageJSONVersion}-${env.BUILD_NUMBER}"

    //                 echo "Building Docker Image From Develop ${APP_TAG}"
    //                 app = docker.build("$IMAGE:$APP_TAG")
    //             }

    //             docker.withRegistry("${ECR_Repository_URL}/${IMAGE}") {
    //                 // docker.withRegistry("https://842092678711.dkr.ecr.eu-west-1.amazonaws.com/gh-terra-name-match-service"){
    //                 app.push("$APP_TAG")
    //             }
    //         }
    //     }
    // }
    }
}